# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Query {
  getInstitutions: [Institution!]!
  hello: String!
  lend: [Lend!]!
  getMaterials: [Material!]!
  getMaterial(id_material: Int!): [Material!]!
  getPopularMaterials: [Material!]!
  getMaterialSearch(nombre: String!): [Material!]!
  getReservations: [Reservation!]!
  me: User
  getUsers: [User!]!
  getUser(cedula: Int!): [User!]!
  getCourses: [Course!]!
  getIn: [Incident!]!
  getIncidents: [Incident!]!
}

type Institution {
  id_institution: Float!
  institution_name: String!
  city: String!
  type: String!
  phone: Float!
}

type Lend {
  id_lend: Float!
  fecha_hora_presta: String
  fecha_vencimiento: String
  fecha_devolucion: String
  laboratorist: String!
  reservation: Reservation
}

type Reservation {
  id_reserva: Float
  fecha_hora: String
  finalizada: Boolean!
  user: User
  material: Material
}

type User {
  cedula: Float!
  nombre: String!
  direccion: String!
  foto_usuario: String!
  telefono: Float!
  tipo_usuario: String!
  fecha_nacimiento: String!
  institution: Institution!
  course: Course!
}

type Course {
  course_id: Float!
  course_name: String!
}

type Material {
  id_material: Float!
  nombre: String!
  etiqueta: String!
  categoria: String!
  descripcion: String!
  cantidad: Float!
  foto: String!
  estado: String!
  institution: Institution!
}

type Incident {
  id_incident: Float!
  observations: String!
  repairs: Boolean!
  complaint: Boolean!
  solved: Boolean!
  date: String!
  material: Material!
}

type Mutation {
  newInstitution(data: InstitutionInput!): Institution!
  updateInstitution(id_institution: Int!, data: InstitutionUpdateInput!): Boolean
  deleteInstitution(id_institution: Int!): Boolean!
  addCourseToInstitution(data: AddCourseToInstitution!): Corresponds!
  createLend(data: LendInput!): Lend!
  newMaterial(data: MaterialInput!): Material!
  updateMaterial(data: MaterialUpdateInput!, id_material: Int!): Material
  deleteMaterial(id_material: Int!): Boolean!
  sendMessage(name: String!): String!
  createReservation(data: ReservationInput!): Reservation!
  updateReservation(data: ReservationEditInput!, id_reserva: Int!): [Reservation!]
  deleteReservation(id_reserva: Int!): Boolean
  login(options: CedulaPasswordInput!): UserResponse!
  logout: Boolean!
  register(data: UserInput!): User!
  deleteUser(cedula: Int!): User
  createNewCourse(data: NewCourse!): Course!
  newIncident(data: IncidentInput!): Incident!
  updateIncident: Incident!
  deleteIncident: Incident!
}

input InstitutionInput {
  institution_name: String!
  city: String!
  type: String!
  phone: Float!
}

input InstitutionUpdateInput {
  institution_name: String
  city: String
  type: String
  phone: Float
}

type Corresponds {
  institution: Institution!
  course: Course!
}

input AddCourseToInstitution {
  institution: institution_data!
  course: course_data_institutio!
}

input institution_data {
  id_institution: Float!
}

input course_data_institutio {
  course_name: String!
}

input LendInput {
  fecha_hora_presta: String
  fecha_vencimiento: String
  fecha_devolucion: String!
  reservation: ReservationInputa!
}

input ReservationInputa {
  id_reserva: Float!
  fecha_hora: DateTime!
}

# The javascript `Date` as string. Type represents date and time as the ISO Date string.
scalar DateTime

input MaterialInput {
  nombre: String!
  etiqueta: String!
  categoria: String!
  descripcion: String!
  cantidad: Float!
  foto: String!
  estado: String!
  institution: institution_material!
}

input institution_material {
  id_institution: Float!
}

input MaterialUpdateInput {
  nombre: String
  etiqueta: String
  categoria: String
  descripcion: String
  cantidad: Float
  foto: String
  estado: String
}

input ReservationInput {
  id_reserva: Float!
  finalizada: Boolean!
  fecha_hora: DateTime
  user: UserReservationInput!
  material: MaterialReservationInput!
}

input UserReservationInput {
  cedula: Float!
}

input MaterialReservationInput {
  id_material: Float!
}

input ReservationEditInput {
  finalizada: Boolean
  fecha_hora: DateTime
  user: UserReservationEditInput
  material: MaterialReservationEditInput
}

input UserReservationEditInput {
  cedula: Float
}

input MaterialReservationEditInput {
  id_material: Float
}

type UserResponse {
  errors: [UserFieldErrors!]
  user: User
}

type UserFieldErrors {
  field: String!
  message: String!
}

input CedulaPasswordInput {
  cedula: Float!
  password: String!
}

input UserInput {
  cedula: Float!
  nombre: String!
  password: String!
  direccion: String!
  foto_usuario: String!
  telefono: Float!
  tipo_usuario: String!
  fecha_nacimiento: String!
  institution: user_institution!
  course: user_course!
}

input user_institution {
  id_institution: Float!
}

input user_course {
  course_id: Float!
}

input NewCourse {
  course_name: String!
}

input IncidentInput {
  observations: String!
  repairs: Boolean!
  complaint: Boolean!
  solved: Boolean!
  date: String!
  material: material_incident_id!
}

input material_incident_id {
  id_material: Float!
}

type Subscription {
  newNotification: String!
}
