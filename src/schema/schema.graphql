# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input AddCourseToInstitution {
  course: course_data_institutio!
  institution: institution_data!
}

input CedulaPasswordInput {
  cedula: Float!
  password: String!
}

type Corresponds {
  course: Course!
  institution: Institution!
}

type Course {
  course_id: Float!
  course_name: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Incident {
  complaint: Boolean!
  date: String!
  id_incident: Float!
  material: Material!
  observations: String!
  repairs: Boolean!
  solved: Boolean!
}

input IncidentInput {
  complaint: Boolean!
  date: String!
  material: material_incident_id!
  observations: String!
  repairs: Boolean!
  solved: Boolean!
}

type Institution {
  city: String!
  id_institution: Float!
  institution_name: String!
  phone: Float!
  type: String!
}

input InstitutionInput {
  city: String!
  institution_name: String!
  phone: Float!
  type: String!
}

input InstitutionUpdateInput {
  city: String
  institution_name: String
  phone: Float
  type: String
}

type Lend {
  fecha_devolucion: String
  fecha_hora_presta: String
  fecha_vencimiento: String
  id_lend: Float!
  reservation: Reservation
}

input LendInput {
  fecha_devolucion: String!
  fecha_hora_presta: String
  fecha_vencimiento: String
  reservation: ReservationInputa!
}

input LendUpdateInput {
  fecha_devolucion: String
  fecha_hora_presta: String
  fecha_vencimiento: String
  reservation: ReservationUpdateInput
}

type Material {
  cantidad: Float!
  categoria: String!
  descripcion: String!
  estado: String!
  etiqueta: String!
  foto: String!
  id_material: Float!
  institution: Institution!
  nombre: String!
}

input MaterialInput {
  cantidad: Float!
  categoria: String!
  descripcion: String!
  estado: String!
  etiqueta: String!
  foto: String!
  institution: institution_material!
  nombre: String!
}

input MaterialReservationEditInput {
  id_material: Float
}

input MaterialReservationInput {
  id_material: Float!
}

input MaterialReservationSessionInput {
  id_material: Float!
}

input MaterialUpdateInput {
  cantidad: Float
  categoria: String
  descripcion: String
  estado: String
  etiqueta: String
  foto: String
  nombre: String
}

type Mutation {
  addCourseToInstitution(data: AddCourseToInstitution!): Corresponds!
  createLend(data: LendInput!): Lend!
  createNewCourse(data: NewCourse!): Course!
  createReservation(data: ReservationInput!): ReservationResponse!
  createReservationUserSession(data: ReservationSessionInput!): Reservation!
  deleteIncident(id_incident: Int!): Boolean!
  deleteInstitution(id_institution: Int!): Boolean!
  deleteLend(fecha_hora_presta: String!, id_lend: Int!): Boolean!
  deleteMaterial(id_material: Int!): Boolean!
  deleteReservation(id_reserva: Int!): Boolean
  deleteUser(cedula: Int!): Boolean!
  login(options: CedulaPasswordInput!): UserResponse!
  logout: Boolean!
  newIncident(data: IncidentInput!): Incident!
  newInstitution(data: InstitutionInput!): Institution!
  newMaterial(data: MaterialInput!): Material!
  register(data: UserInput!): UserResponse!
  subMaterial(data: MaterialInput!): Material!
  updateIncident: Incident!
  updateInstitution(data: InstitutionUpdateInput!, id_institution: Int!): Boolean
  updateLend(data: LendUpdateInput!, id_lend: Int!): Lend!
  updateMaterial(data: MaterialUpdateInput!, id_material: Int!): Material
  updateReservation(data: ReservationEditInput!, id_reserva: Int!): [Reservation!]
  updateUser(cedula: Int!, data: UserUpdateInput!): Boolean!
}

input NewCourse {
  course_name: String!
}

type Query {
  getCourses: [Course!]!
  getIncidents: [Incident!]!
  getInstitutions: [Institution!]!
  getLendsCount: Int!
  getMaterial(id_material: Int!): Material!
  getMaterialSearch(nombre: String!): [Material!]!
  getMaterials: [Material!]!
  getMaterialsCount: Int!
  getMaxId: Int!
  getPopularMaterials: [Material!]!
  getReservations: [Reservation!]!
  getReservationsCount: Int!
  getUser(cedula: Int!): [User!]!
  getUsers: [User!]!
  hello: String!
  lend: [Lend!]!
  me: User
}

type Reservation {
  fecha_hora: String
  finalizada: Boolean!
  id_reserva: Float
  material: Material
  user: User
}

input ReservationEditInput {
  fecha_hora: DateTime
  finalizada: Boolean
  material: MaterialReservationEditInput
  user: UserReservationEditInput
}

type ReservationErrors {
  field: String!
  message: String!
}

input ReservationInput {
  fecha_hora: DateTime
  finalizada: Boolean!
  id_reserva: Float!
  material: MaterialReservationInput!
  user: UserReservationInput!
}

input ReservationInputa {
  fecha_hora: DateTime!
  id_reserva: Float!
}

type ReservationResponse {
  errors: [ReservationErrors!]
  reservation: Reservation
}

input ReservationSessionInput {
  fecha_hora: DateTime
  finalizada: Boolean!
  id_reserva: Float!
  material: MaterialReservationSessionInput!
  user: UserReservationSessionInput
}

input ReservationUpdateInput {
  fecha_hora: DateTime!
  id_reserva: Float!
}

type Subscription {
  newIncidentSubscription: Incident!
  newLendSubscription: Lend!
  newMaterialSubscription: Material!
  newReservationSubscription: Reservation!
  newUserSubscription: User!
}

type User {
  cedula: Float!
  course: Course!
  direccion: String!
  fecha_nacimiento: String!
  foto_usuario: String!
  institution: Institution!
  nombre: String!
  telefono: Float!
  tipo_usuario: String!
}

type UserErrors {
  field: String!
  message: String!
}

input UserInput {
  cedula: Float!
  course: user_course!
  direccion: String!
  fecha_nacimiento: String!
  foto_usuario: String!
  institution: user_institution!
  nombre: String!
  password: String!
  telefono: Float!
  tipo_usuario: String!
}

input UserReservationEditInput {
  cedula: Float
}

input UserReservationInput {
  cedula: Float!
}

input UserReservationSessionInput {
  cedula: Float!
}

type UserResponse {
  errors: [UserErrors!]
  user: User
}

input UserUpdateInput {
  course: user_course_update
  direccion: String
  fecha_nacimiento: String
  foto_usuario: String
  institution: user_institution_update
  nombre: String
  password: String
  telefono: Float
  tipo_usuario: String
}

input course_data_institutio {
  course_name: String!
}

input institution_data {
  id_institution: Float!
}

input institution_material {
  id_institution: Float!
}

input material_incident_id {
  id_material: Float!
}

input user_course {
  course_id: Float!
}

input user_course_update {
  course_id: Float
}

input user_institution {
  id_institution: Float!
}

input user_institution_update {
  id_institution: Float
}
